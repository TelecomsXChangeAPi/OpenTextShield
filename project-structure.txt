.
├── .claude
│   └── settings.local.json
├── feedback
│   └── feedback_ots-mbert.csv
├── frontend
│   └── index.html
├── tests
│   ├── api                      # API endpoint tests
│   │   ├── test_api_complete.py
│   │   ├── test_api_full.py
│   │   ├── test_api_simple.py
│   │   ├── test_api_structure.py
│   │   ├── test_feedback_api.py
│   │   └── test_server.py
│   ├── integration              # Integration and e2e tests
│   │   ├── test-docker.sh
│   │   ├── test-frontend.sh
│   │   └── test_feedback_curl.sh
│   ├── data                     # Test data and fixtures
│   │   ├── test_obvious_phishing.json
│   │   ├── test_obvious_spam.json
│   │   ├── test_phishing.json
│   │   └── test_spam.json
│   └── README.md               # Test documentation
├── src
│   ├── api_interface
│   │   ├── config
│   │   │   ├── __init__.py
│   │   │   ├── settings.py
│   │   │   └── simple_settings.py
│   │   ├── middleware
│   │   │   ├── __init__.py
│   │   │   └── security.py
│   │   ├── models
│   │   │   ├── __init__.py
│   │   │   ├── request_models.py
│   │   │   └── response_models.py
│   │   ├── routers
│   │   │   ├── __init__.py
│   │   │   ├── feedback.py
│   │   │   ├── health.py
│   │   │   └── prediction.py
│   │   ├── services
│   │   │   ├── __init__.py
│   │   │   ├── feedback_service.py
│   │   │   ├── model_loader.py
│   │   │   └── prediction_service.py
│   │   ├── utils
│   │   │   ├── __init__.py
│   │   │   ├── exceptions.py
│   │   │   └── logging.py
│   │   ├── __init__.py
│   │   ├── main.py
│   │   └── openapi.yaml
│   ├── mBERT
│   │   ├── tests
│   │   │   ├── pytest_tests.py
│   │   │   ├── README.md
│   │   │   ├── run_all_tests.py
│   │   │   ├── simple_phishing.json
│   │   │   ├── stressTest_1000_mlx.py
│   │   │   ├── stressTest_20k_mlx_api.py
│   │   │   ├── stressTest_500.py
│   │   │   ├── test_basic.py
│   │   │   ├── test_obvious_ham.json
│   │   │   ├── test_obvious_phishing.json
│   │   │   ├── test_obvious_spam.json
│   │   │   ├── test_sms.py
│   │   │   ├── test_stress.py
│   │   │   └── test_utils.py
│   │   └── training
│   │       └── model-training
│   │           ├── archive
│   │           │   ├── changelogs
│   │           │   │   ├── 1_7_5_change_log.txt
│   │           │   │   ├── 1_7_6_change_log.txt
│   │           │   │   ├── 1_7_change_log.txt
│   │           │   │   ├── 1_8_0_change_log
│   │           │   │   ├── 1_9_0_change_log
│   │           │   │   └── 2.1_change_log
│   │           │   └── datasets
│   │           │       ├── sms_spam_phishing_dataset_v1.5.csv
│   │           │       ├── sms_spam_phishing_dataset_v1.6.csv
│   │           │       ├── sms_spam_phishing_dataset_v1.7.5.csv
│   │           │       ├── sms_spam_phishing_dataset_v1.7.6.csv
│   │           │       ├── sms_spam_phishing_dataset_v1.7.csv
│   │           │       ├── sms_spam_phishing_dataset_v2.0.csv
│   │           │       └── translated_dataset1_6_SRILANKA.csv
│   │           ├── dataset
│   │           │   ├── phishing_urls_dataset.csv
│   │           │   ├── sms_spam_indo-xsmall.csv
│   │           │   └── sms_spam_phishing_dataset_v2.1.csv
│   │           ├── utils
│   │           │   └── bert.py
│   │           ├── CHANGELOG.md
│   │           ├── clean_dataset.py
│   │           ├── config.py
│   │           ├── dataset_manager.py
│   │           ├── load_bert.py
│   │           ├── main.py
│   │           ├── mbert_ots_model_2.1.pth
│   │           ├── README.md
│   │           ├── requirements-minimal.txt
│   │           ├── requirements.txt
│   │           ├── test_training.py
│   │           ├── train_ots_improved.py
│   │           ├── train_ots.py
│   │           ├── translate_dataset_secure.py
│   │           └── translate_dataset.py
│   ├── README.md
│   └── requirements.txt
├── .dockerignore
├── .dockerignore.local
├── .gitattributes
├── .gitignore
├── .gitmodules
├── CLAUDE.md
├── CODE_OF_CONDUCT.md
├── CONTRIBUTING.md
├── docker-compose.yml
├── Dockerfile
├── Dockerfile.dev
├── Dockerfile.local
├── Dockerfile.simple
├── FEEDBACK_API.md
├── Installation.md
├── installed_packages.txt
├── LICENSE
├── nginx.conf
├── project-structure.txt
├── README.md
├── requirements-minimal.txt
├── requirements.txt
├── RESEARCH.md
├── start-docker.sh
├── start-local.sh
├── start-manual.sh
├── start.sh
├── STARTUP_GUIDE.md
├── test_api_complete.py
├── test_api_full.py
├── test_api_simple.py
├── test_api_structure.py
├── test_feedback_api.py
├── test_feedback_curl.sh
├── test_obvious_phishing.json
├── test_obvious_spam.json
├── test_phishing.json
├── test_server.py
├── test_spam.json
├── test-docker.sh
└── test-frontend.sh

## Project Overview

**OpenTextShield Platform v2** - Modern SMS Spam/Phishing Detection System

### Core Components

**API Interface** (`src/api_interface/`) - Professional modular FastAPI structure:
- `main.py`: FastAPI application entry point with lifespan management
- `config/`: Environment-based configuration management
- `models/`: Pydantic request/response models with validation
- `services/`: Business logic (model_loader, prediction_service, feedback_service)
- `routers/`: API endpoints (health, prediction, feedback)
- `middleware/`: Security middleware (IP verification, CORS)
- `utils/`: Logging and custom exceptions

**mBERT Model** (`src/mBERT/`) - Multilingual BERT for global SMS classification:
- `training/model-training/`: Training scripts and model files
- `mbert_ots_model_2.1.pth`: Production model (679MB)
- `tests/`: Comprehensive test suite including stress tests
- Apple Silicon MLX optimization support

**Frontend** (`frontend/`) - Professional web interface:
- Clean AI research lab aesthetic
- Real-time system monitoring
- Interactive text analysis interface

**Docker Support** - Multi-architecture deployment:
- `Dockerfile`: Modern Ubuntu 24.04 + Python 3.12
- `docker-compose.yml`: Complete stack deployment
- ARM64 and x86_64 architecture support
- Optimized 2.27GB image size (was 31.15GB)

**Documentation** - Comprehensive guides:
- `README.md`: Main project documentation
- `CLAUDE.md`: Development and deployment guide
- `STARTUP_GUIDE.md`: Quick start options
- `Installation.md`: Installation instructions
- `FEEDBACK_API.md`: Feedback system documentation

**Key Features:**
- Modern clean architecture (removed legacy BERT/FastText)
- Professional modular API design
- Multi-language support via mBERT
- Real-time web interface
- Comprehensive testing suite
- Docker containerization
- Feedback collection system
- Health monitoring and diagnostics

12 directories, 89 files